#!/bin/bash -e

#
# This script will use the k6 binary in your PATH, or fall back to a docker
# container. You should take care to verify that your APPLIANCE_* environment
# variables are pointing to the correct URL if you're hosting your Appliance
# locally. Depending on whether or not k6 is running in docker, the path to
# the Appliance will be different!
#

source "$(git rev-parse --show-toplevel)/tools/performance-tests/k6/bin/functions"

compose_file="$(repo_root)/docker-compose.yml"

# Globals for downstream processes
export POLICY_ID=${POLICY_ID:-"root"}
# Default for reading random secrets
export K6_CUSTOM_GRACEFUL_STOP=${K6_CUSTOM_GRACEFUL_STOP:-"30s"}
export K6_CUSTOM_VUS=${K6_CUSTOM_VUS:-"12"}
export K6_CUSTOM_ITERATIONS=${K6_CUSTOM_ITERATIONS:-"64500"}
export K6_CUSTOM_DURATION=${K6_CUSTOM_DURATION:-"1h"}

k6() {
  cmd="$@"

  docker compose -f "$compose_file" run --rm \
    -e UUID \
    -e APPLIANCE_MASTER_URL \
    -e APPLIANCE_READ_URL \
    -e CONJUR_ADMIN_API_KEY \
    -e CONJUR_ACCOUNT \
    -e CONJUR_IDENTITY \
    -e K6_CUSTOM_GRACEFUL_STOP \
    -e K6_CUSTOM_VUS \
    -e K6_CUSTOM_ITERATIONS \
    -e K6_CUSTOM_DURATION \
    -e K6_STATSD_ADDR \
    -e POLICY_FILE \
    -e POLICY_ID \
    -e DESIRED_LOB \
    -e DESIRED_SAFE \
    -e DRYRUN_POLICY_EXECUTOR \
    -e POLICY_CONTENTS_SIZE \
    -e DRYRUN_ITERATIONS \
    --entrypoint /bin/bash k6 -c "k6 $cmd"
}

# Include default values as to not pollute the global namespace.
k6 version
k6 "$@"
