---
- !policy
  id: burn-in
  body:
    - !group security_ops
    - !group team_leads
    - !group developers
    
    - !user
      id: dev.user
      annotations:
        first_name: Dev
        last_name: User
        email: dev.user@cyberark.com

    - !user
      id: team.lead
      annotations:
        first_name: Team
        last_name: Lead
        email: team.lead@cyberark.com

    - !user
      id: security.ops
      annotations:
        first_name: Security
        last_name: Ops
        email: security.ops@cyberark.com

    - !host host-one

    - !grant
      role: !group developers
      members:
        - !user dev.user
        - !host host-one

    - !grant
      role: !group team_leads
      members:
        - !user team.lead

    - !grant
      role: !group security_ops
      members:
        - !user security.ops

    - !grant
      member: !group team_leads
      role: !group developers

    - !grant
      member: !group security_ops
      role: !group team_leads


    - !policy
      id: myapp
      body:
        - &variables
          - !variable
            id: database/username
            annotations:
              description: Application database username

          - !variable
            id: database/password
            annotations:
              description: Application database password

          - !variable
            id: stripe/private_key
            annotations:
              description: Stripe API key

          - !variable "foo bar"

          - !variable '{ []: {[]:[]} }'

        - !layer myapp

        - !host-factory
          layer: [!layer myapp]

        - !group secrets-users
        - !group secrets-managers

        # secrets-users can read and execute
        - !permit
          resource: *variables
          privileges: [read, execute]
          role: !group secrets-users

        # secrets-managers can update (and read and execute, via role grant)
        - !permit
          resource: *variables
          privileges: [update]
          role: !group secrets-managers

        # secrets-managers has role secrets-users
        - !grant
          member: !group secrets-managers
          role: !group secrets-users

        # Application layer has the secrets-users role
        - !grant
          member: !layer myapp
          role: !group secrets-users

        - !grant
          member: !group /burn-in/security_ops
          role: !group secrets-managers

    - !grant
      member: !host host-one
      role: !group myapp/secrets-users
