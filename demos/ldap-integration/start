#!/bin/bash -ex

function print_help() {
  cat << EOF

Provisions a Conjur cluster locally, using Docker.

Usage: start [options]

    -h, --help        Shows this help message.

EOF
  exit
}

while true ; do
  case "$1" in
    -h | --help ) print_help ; shift ;;
     * ) if [ -z "$1" ]; then break; else echo "$1 is not a valid option"; exit 1; fi;;
  esac
done

docker compose up -d --no-deps conjur-master.mycompany.local conjur-follower.mycompany.local ldap-server

docker compose exec conjur-master.mycompany.local bash -c "
  evoke configure master \
  --accept-eula \
  -h conjur-master.mycompany.local \
  -p secret demo
"

master_container="$(docker ps -q --filter "name=ldap-integration_conjur-master.mycompany.local_1")"
master_ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $master_container)

docker compose exec conjur-master.mycompany.local bash -c "
  evoke seed follower conjur-follower.mycompany.local > /opt/conjur/backup/follower-seed.tar
"

# Enable LDAP sync service
docker compose exec conjur-master.mycompany.local bash -c "
  rm /etc/service/conjur/ldap-sync/down
  sv start conjur/ldap-sync
"

# Setup the follower
docker compose exec conjur-follower.mycompany.local bash -c "
  evoke unpack seed /opt/conjur/backup/follower-seed.tar
"
docker compose exec conjur-follower.mycompany.local bash -c "
  evoke configure follower
"

# Load the LDAP users and groups into OpenLDAP
LDAP_ADMIN_PASSWORD=ldapsecret
docker compose exec ldap-server bash -c "
  ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /opt/ldap/disable_anon_frontend.ldif
  ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /opt/ldap//disable_anon_backend.ldif
  ldapadd -Z -x -D cn=admin,dc=example,dc=org -w $LDAP_ADMIN_PASSWORD -f /opt/ldap/test-ldap_users.ldif
  ldapadd -Z -x -D cn=admin,dc=example,dc=org -w $LDAP_ADMIN_PASSWORD -f /opt/ldap//test-ldap_groups.ldif
  "

./cli conjur policy load --replace root policy/01_root.yml

# Load policy for LDAP sync
./cli conjur policy load conjur/ldap-sync policy/02_ldap_sync.yml

# Store the LDAP bind password
./cli conjur variable values add conjur/ldap-sync/bind-password/default $LDAP_ADMIN_PASSWORD

cat certs/ca.crt | ./cli conjur variable values add conjur/ldap-sync/tls-ca-cert/default

# Generate sync policy
./cli conjur ldap-sync policy show | tail -n +2 > ./policy/ldap-sync-default.yml
./cli conjur policy load root policy/ldap-sync-default.yml

# Load policy for authn LDAP
./cli conjur policy load conjur/authn-ldap policy/03_authn_ldap.yml
./cli conjur policy load root policy/04_authn_ldap_entitlements.yml

# Store the LDAP bind password and CA cert chain
./cli conjur variable values add conjur/authn-ldap/ldap-server/bind-password $LDAP_ADMIN_PASSWORD
cat certs/ca.crt | ./cli conjur variable values add conjur/authn-ldap/ldap-server/tls-ca-cert
