---
- hosts: localhost
  gather_facts: no
  vars:
    docker_network: dap_network
    path: /Users/jasonvanderhoof/code/conjur-intro
  tasks:
    - name: "Create a network"
      docker_network:
        name: "{{ docker_network }}"
        ipam_config:
          - subnet: 12.16.23.0/27

    - name: Create a seed volume
      docker_volume:
        name: seeds

    - name: Create a DAP Master Cluster Proxy
      docker_container:
        name: conjur-master.mycompany.local
        image: haproxy:2.1-alpine
        networks:
          - name: "{{ docker_network }}"
            ipv4_address: "12.16.23.10"
        ports:
          - "443:443"
          - "7000:7000"
        expose:
          - "1999"
          - "5432"
        volumes:
          - "{{ path }}/files/haproxy/master/multi-node:/usr/local/etc/haproxy"

    - name: Create a DAP Node
      docker_container:
        name: conjur-master-{{ item }}.mycompany.local
        image: registry2.itci.conjur.net/conjur-appliance:5.11.0
        networks:
          - name: "{{ docker_network }}"
            ipv4_address: "12.16.23.1{{ item }}"
        ports:
          - "44{{ item|int + 3}}:443"
        expose:
          - "443"
          - "444"
          - "1999"
          - "5432"
        security_opts:
            - "seccomp:unconfined"
        volumes:
          - ./system/backup:/opt/conjur/backup:Z
          - ./system/configuration:/opt/cyberark/dap/configuration:Z
          - ./system/logs/master-1:/var/log/conjur:Z
          - ./files:/conjur_files
          - seeds:/opt/cyberark/dap/seeds
      with_sequence: count=3


# - hosts: conjur-master-1.mycompany.local
#   roles:
#     - role: cyberark.conjur
#   vars:
#     conjur_config:
#       host_fqdn: "conjur-1.mycompany.com"
#       master_cluster_fqdn: "conjur.mycompany.com"
#       type: "master"
#       account: "demo"
#       admin_password: "secret"
#       cluster_name: 'conjur-cluster'
#       master_key: "/path/to/key"
#       certs:
#         master_certificate: ""
#         master_key: ""
#         host_certificate: ""
#         host_key: ""
#
# - hosts: standby_node_1
#   roles:
#     - role: cyberark.conjur
#   vars:
#     conjur_credentials:
#       hf_token: ""
#       resource_id: "" # alternative to hf_token when combinded with api_key
#       api_key: ""
#     conjur_config:
#       # master_host: master_node
#       host_fqdn: "conjur-2.mycompany.com"
#       master_cluster_fqdn: "conjur.mycompany.com"
#       type: "standby"
#       cluster_name: 'conjur-cluster'
#       master_key: "/path/to/key"
#       certs:
#         host_certificate: ""
#         host_key: ""
#
# - hosts: standby_node_2
#   roles:
#     - role: cyberark.conjur
#   vars:
#     conjur_credentials:
#       hf_token: ""
#       resource_id: "" # alternative to hf_token when combinded with api_key
#       api_key: ""
#     conjur_config:
#       host_fqdn: "conjur-3.mycompany.com"
#       master_cluster_fqdn: "conjur.mycompany.com"
#       type: "standby"
#       cluster_name: 'conjur-cluster'
#       master_key: "/path/to/key"
#       certs:
#         host_certificate: ""
#         host_key: ""
#
# - hosts: dr_standby_node_1
#   roles:
#     - role: cyberark.conjur
#   vars:
#     conjur_credentials:
#       hf_token: ""
#       resource_id: "" # alternative to hf_token when combinded with api_key
#       api_key: ""
#     conjur_config:
#       host_fqdn: "conjur-dr-1.mycompany.com"
#       master_cluster_fqdn: "conjur.mycompany.com"
#       type: "standby"
#       master_key: "/path/to/key"
#       certs:
#         host_certificate: ""
#         host_key: ""
#
#
# - hosts: follower_node_1
#   roles:
#     - role: cyberark.conjur
#   vars:
#     conjur_credentials:
#       hf_token: ""
#       resource_id: "" # alternative to hf_token when combinded with api_key
#       api_key: ""
#     conjur_config:
#       #master_host: master_node
#       host_fqdn: "conjur-follower-1.mycompany.com"
#       load_balancer_fqdn: "conjur.mycompany.com"
#       type: "follower" # master|standby|follower
#       master_key: "/path/to/key"
#       certs:
#         host_certificate: ""
#         host_key: ""
