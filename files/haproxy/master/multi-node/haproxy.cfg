global
  daemon
  maxconn 256
  log-send-hostname

defaults
  mode tcp
  option http-use-htx
  timeout connect 5000ms
  timeout client  50000ms
  timeout server  50000ms

#
# Peform SSL Pass-Through to proxy HTTPS requests to DAP
#
frontend www
  mode tcp
  bind *:443
  option tcplog
  default_backend www-backend

#
# Peform SSL pass-through to proxy Postgres TCP requests from standbys/followers to DAP Master
#
frontend postgres
  mode tcp
  bind *:5432
  option tcplog
  default_backend postgres-backend

#
# Peform SSL pass-through to proxy Syslog TCP requests from followers to DAP Master
#
frontend syslog
  mode tcp
  bind *:1999
  option tcplog
  default_backend syslog-backend

#
# Performs Layer 4 proxy
# Uses DAP's HTTP health endpoint to determine master
#
backend www-backend
  mode tcp
  balance roundrobin
  option httpchk GET /health
  server conjur-master-1 conjur-master-1.mycompany.local:443 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-2 conjur-master-2.mycompany.local:443 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-3 conjur-master-3.mycompany.local:443 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-4 conjur-master-4.mycompany.local:443 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-5 conjur-master-5.mycompany.local:443 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem


#
# Performs Layer 4 proxy
# Uses DAP's HTTP health endpoint to determine master
#
backend postgres-backend
  mode tcp
  balance roundrobin
  option httpchk GET /health
  server conjur-master-1 conjur-master-1.mycompany.local:5432 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-2 conjur-master-2.mycompany.local:5432 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-3 conjur-master-3.mycompany.local:5432 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-4 conjur-master-4.mycompany.local:5432 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-5 conjur-master-5.mycompany.local:5432 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem

#
# Performs Layer 4 proxy
# Uses DAP's HTTP health endpoint to determine master
#
backend syslog-backend
  mode tcp
  balance roundrobin
  option httpchk GET /health
  server conjur-master-1 conjur-master-1.mycompany.local:1999 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-2 conjur-master-2.mycompany.local:1999 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-3 conjur-master-3.mycompany.local:1999 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-4 conjur-master-4.mycompany.local:1999 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem
  server conjur-master-5 conjur-master-5.mycompany.local:1999 check port 443 check-ssl ca-file /etc/ssl/certs/ca.pem

#
# Enables HAProxy's UI for debugging
#
listen stats
  mode http
  bind *:7000
  stats enable
  stats uri /
