#!/bin/bash

# USAGE
#
# Dumps the logs of the running Leader and all Followers up to the given
# FOLLOWER_COUNT. If the container is not running, no log is printed, and
# indicating a failure to configure / deploy a container, and this script will
# fail.
#
# ./bin/dump-appliance-logs --follower-count 1
# ./bin/dump-appliance-logs --follower-count 5
# ./bin/dump-appliance-logs --follower-count 10
# ./bin/dump-appliance-logs --no-fail --follower-count 10

set -e

# Always work from repo root directory
cd "$(dirname ${0})/..";

source ./bin/utils.sh

LOG_DIR="tmp/appliance/logs"
LEADER_LOG_DIR="$LOG_DIR/leader"
FOLLOWER_LOG_DIR="$LOG_DIR/follower"
NO_FAIL="false"
FOLLOWER_COUNT=
LEADER_COUNT=3

# Use this to hide WARN from docker compose...
# WARN[0000] The "VERSION" variable is not set. Defaulting to a blank string.
export VERSION=

main(){
  is_failure_detected_globally="false"

  echo "Beginning script: $0"

  if [[ -z "$FOLLOWER_COUNT" ]]; then
    echo "FATAL: FOLLOWER_COUNT must be specified as --follower-count"
    exit 1
  fi

  if [ "$NO_FAIL" = "true" ]; then
    echo "NO_FAIL is specified, this script will not fail if a container is not running."
  fi

  mkdir -p "$LEADER_LOG_DIR"
  mkdir -p "$FOLLOWER_LOG_DIR"

  echo "Dumping Leader Logs at: $LEADER_LOG_DIR"
  for ((i=1; i<=LEADER_COUNT; i++)); do
    local leader_container="conjur-master-${i}.mycompany.local"

    container_id=$(docker compose ps -q $leader_container)
    if [ -z "$container_id" ]; then
      echo "WARNING: No container ID found for service '$leader_container' (it is not running), skipping!"
      continue
    fi

    echo "Dumping logs for '$leader_container'"
    docker compose logs "$leader_container" > "$LEADER_LOG_DIR/conjur-master-${i}.log"
  done

  echo "Dumping Leader reconfigure logs at: $LEADER_LOG_DIR"
  docker compose logs "conjur-master.mycompany.local" > "$LEADER_LOG_DIR/haproxy.log"

  echo "Dumping Follower Logs at: $FOLLOWER_LOG_DIR"
  for ((i=1; i<=FOLLOWER_COUNT; i++))
  do
    FOLLOWER_HOSTNAME="conjur-follower-${i}.mycompany.local"

    container_id=$(docker compose ps -q $FOLLOWER_HOSTNAME)
    if [ -z "$container_id" ]; then
      echo "WARNING: No container ID found for service '$FOLLOWER_HOSTNAME' (it is not running), skipping!"
      is_failure_detected_globally="true"
      continue
    fi

    echo "Dumping logs for '$FOLLOWER_HOSTNAME'"
    docker compose logs "$FOLLOWER_HOSTNAME" > "$FOLLOWER_LOG_DIR/conjur-follower-${i}.log"
  done

  if [ "$is_failure_detected_globally" = "true" ] && [ "$NO_FAIL" = "false" ] ; then
    echo "FATAL: An error was detected in at least one node, see above."
    exit 1
  fi
  echo "DONE."
}

while true ; do
  case "$1" in
    --no-fail ) NO_FAIL='true' ; shift ;;
    --follower-count ) shift; FOLLOWER_COUNT="$1" ; shift ;;
     * ) if [ -z "$1" ]; then break; else echo "$1 is not a valid option"; exit 1; fi;;
  esac
done

main
