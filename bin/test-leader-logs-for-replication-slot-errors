#!/usr/bin/env bash
set -o pipefail

# USAGE
#
# Parses the Appliance Leader log files created by the `dump-appliance-logs`
# script for error patterns related to replication slots issues. Error patterns
# that are matched are prefixed with the line number of where the match
# occurred, and are tabbed in for (hopefully) better readability.
#
# NOTE: Leader and Follower logs are tested for different patterns/cases.
#
# ./bin/test-leader-logs-for-replication-slot-errors
#

# Always work from repo root directory
cd "$(dirname ${0})/..";

source ./bin/functions
source ./bin/utils.sh

LOG_DIR="$(appliance_log_dir)/logs"
LEADER_LOG_DIR="$LOG_DIR/leader"

main(){
  is_failure_detected_globally="false"
  failed_logs=()

  for file in "$LEADER_LOG_DIR"/*
  do
    is_leader_failure_detected="false"

    echo "Testing log file: $file..."

    if grep -n -E 'ERROR:  replication slot "pg_[0-9]+_sync_[0-9]+_[0-9]+" does not exist' "$file" | sed 's/^/\t/'; then
      is_leader_failure_detected="true"
    fi

    if [ "$is_leader_failure_detected" = "true" ]; then
      echo "ERROR: An error was detected in log file '$file', see above."
      is_failure_detected_globally="true"
      failed_logs+=("$file")
    fi
  done

  if [ "$is_failure_detected_globally" = "true" ]; then
    echo "Failures were detected in the following files:"
    for log in "${failed_logs[@]}"
    do
      echo "- $log"
    done
    echo "FATAL: An error was detected in at least one Leader log file, see above."
    exit 1
  fi
  echo "SUCCESS: No errors were detected in any log Leader file."
  echo "DONE."
}

main "$@"
